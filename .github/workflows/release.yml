name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:  
      - name: Checkout the code
        uses: actions/checkout@v3
  
      - name: Give execute permissions to the script
        run: chmod +x ./build_mac_linux.sh        

      - name: Build Linux version
        run: ./build_mac_linux.sh

      - name: Create the dist/linux folder
        run: mkdir -p ./dist

      - name: Copy the Linux binary to the dist/linux folder
        run: cp usm ./dist/usm.linux

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
  
      - name: Give execute permissions to the script
        run: chmod +x ./build_mac_linux.sh        

      - name: Build macOS version
        run: ./build_mac_linux.sh

      - name: Create the dist/macos folder
        run: mkdir -p ./dist
      
      - name: Copy the macOS binary to the dist/macos folder
        run: cp usm ./dist/usm.macos

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up MinGW
        run: |
          choco install mingw
          echo "C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin" >> $GITHUB_PATH

      - name: Build Windows version using MinGW
        run: .\build_mingw.bat

      - name: Create the dist/windows folder
        run: mkdir .\dist

      - name: Copy the Windows binary to the dist/windows folder
        run: copy usm.exe .\dist\usm.exe
  
  create-release:
    needs: [build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Upload the binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*
          tag: ${{ github.ref }}
          release_name: v${{ env.RELEASE_VERSION }}
          file_glob: true
          overwrite: true
          make_latest: true
      

  # upload-artifacts:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version: [ "3.10" ]
  #       include:
  #         - os: ubuntu-latest
  #           linux_executable: usm
  #           mac_executable: usm
  #           windows_executable: usm.exe
  #   steps:  
  #   - name: Checkout the code
  #     uses: actions/checkout@v3
  
  #   - name: Upload Linux executable
  #     uses: svenstaro/upload-release-action@v2
  #     with:
  #       repo_token: ${{ secrets.GITHUB_TOKEN }}
  #       file: dist/linux/${{ matrix.linux_executable }}
  #       asset_name: ${{ matrix.linux_executable }}
  #       tag: ${{ github.ref }}
  #       overwrite: true
  #   - name: Upload Linux executable to latest
  #     uses: svenstaro/upload-release-action@v2
  #     with:
  #       repo_token: ${{ secrets.GITHUB_TOKEN }}
  #       file: dist/linux/${{ matrix.linux_executable }}
  #       asset_name: ${{ matrix.linux_executable }}
  #       tag: latest
  #       overwrite: true
  #   - name: Upload macOS executable
  #     uses: svenstaro/upload-release-action@v2
  #     with:
  #       repo_token: ${{ secrets.GITHUB_TOKEN }}
  #       file: dist/macos/${{ matrix.mac_executable }}
  #       asset_name: ${{ matrix.mac_executable }}
  #       tag: ${{ github.ref }}
  #       overwrite: true
  #   - name: Upload macOS executable to latest
  #     uses: svenstaro/upload-release-action@v2
  #     with:
  #       repo_token: ${{ secrets.GITHUB_TOKEN }}
  #       file: dist/macos/${{ matrix.mac_executable }}
  #       asset_name: ${{ matrix.mac_executable }}
  #       tag: latest
  #       overwrite: true
  #   - name: Upload Windows executable
  #     uses: svenstaro/upload-release-action@v2
  #     with:
  #       repo_token: ${{ secrets.GITHUB_TOKEN }}
  #       file: dist/windows/${{ matrix.windows_executable }}
  #       asset_name: ${{ matrix.windows_executable }}
  #       tag: ${{ github.ref }}
  #       overwrite: true
  #   - name: Upload Windows executable to latest
  #     uses: svenstaro/upload-release-action@v2
  #     with:
  #       repo_token: ${{ secrets.GITHUB_TOKEN }}
  #       file: dist/windows/${{ matrix.windows_executable }}
  #       asset_name: ${{ matrix.windows_executable }}
  #       tag: latest
  #       overwrite: true
  # create-release:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Create Release
  #       id: create_release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: ${{ github.ref }}
  #         release_name: Release ${{ github.ref_name }}
  #         draft: false
  #         prerelease: false
      